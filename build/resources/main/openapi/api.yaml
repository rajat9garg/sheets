openapi: 3.0.3
info:
  title: Sheets API
  description: API for collaborative spreadsheet application
  version: 1.0.0
  contact:
    name: API Support
    email: support@example.com
  license:
    name: Proprietary

servers:
  - url: /v1
    description: Development server

paths:
  /health:
    get:
      summary: Health check endpoint
      description: Returns the health status of the application
      operationId: healthCheck
      tags:
        - Health
      responses:
        '200':
          description: Application is healthy
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthResponse'

  /sheet:
    post:
      summary: Create a new sheet
      description: Creates a new sheet with the specified name and description
      operationId: createSheet
      tags:
        - Sheet
      parameters:
        - name: X-User-ID
          in: header
          required: true
          schema:
            type: integer
            format: int64
          description: ID of the user creating the sheet
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSheetRequest'
      responses:
        '201':
          description: Sheet created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SheetResponse'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    
    get:
      summary: Get all sheets
      description: Returns all sheets owned by or shared with the user
      operationId: getSheets
      tags:
        - Sheet
      parameters:
        - name: X-User-ID
          in: header
          required: true
          schema:
            type: integer
            format: int64
          description: ID of the user requesting sheets
      responses:
        '200':
          description: List of sheets
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SheetSummaryResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /sheet/{sheetId}:
    get:
      summary: Get sheet details
      description: Returns details of a specific sheet
      operationId: getSheetDetails
      tags:
        - Sheet
      parameters:
        - name: X-User-ID
          in: header
          required: true
          schema:
            type: integer
            format: int64
          description: ID of the user requesting sheet details
        - name: sheetId
          in: path
          required: true
          schema:
            type: integer
            format: int64
          description: ID of the sheet to retrieve
      responses:
        '200':
          description: Sheet details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SheetDetailsResponse'
        '404':
          description: Sheet not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Access denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /sheet/{sheetId}/share:
    post:
      summary: Share a sheet
      description: Shares a sheet with other users
      operationId: shareSheet
      tags:
        - Sheet
      parameters:
        - name: X-User-ID
          in: header
          required: true
          schema:
            type: integer
            format: int64
          description: ID of the user sharing the sheet
        - name: sheetId
          in: path
          required: true
          schema:
            type: integer
            format: int64
          description: ID of the sheet to share
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShareSheetRequest'
      responses:
        '200':
          description: Sheet shared successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShareSheetResponse'
        '404':
          description: Sheet not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Access denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /sheet/{sheetId}/cell:
    post:
      summary: Update a cell
      description: Updates an existing cell in a sheet. Cells are automatically created when a sheet is created.
      operationId: updateCell
      tags:
        - Cell
      parameters:
        - name: sheetId
          in: path
          required: true
          schema:
            type: integer
            format: int64
          description: ID of the sheet
        - name: X-User-ID
          in: header
          required: true
          schema:
            type: integer
            format: int64
          description: ID of the user making the request
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CellRequest'
      responses:
        '200':
          description: Cell updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CellResponse'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CellErrorResponse'
        '403':
          description: Forbidden - User does not have write access
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Sheet not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '409':
          description: Conflict - Cell is locked by another user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    
    get:
      summary: Get all cells in a sheet
      description: Retrieves all cells in a sheet
      operationId: getCellsBySheetId
      tags:
        - Cell
      parameters:
        - name: sheetId
          in: path
          required: true
          schema:
            type: integer
            format: int64
          description: ID of the sheet
        - name: X-User-ID
          in: header
          required: true
          schema:
            type: integer
            format: int64
          description: ID of the user making the request
      responses:
        '200':
          description: Cells retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CellBatchResponse'
        '403':
          description: Forbidden - User does not have access
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Sheet not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  
  /sheet/{sheetId}/cell/{row}/{column}:
    get:
      summary: Get a specific cell
      description: Retrieves a specific cell from a sheet
      operationId: getCell
      tags:
        - Cell
      parameters:
        - name: sheetId
          in: path
          required: true
          schema:
            type: integer
            format: int64
          description: ID of the sheet
        - name: row
          in: path
          required: true
          schema:
            type: integer
          description: Row index of the cell
        - name: column
          in: path
          required: true
          schema:
            type: integer
          description: Column index of the cell
        - name: X-User-ID
          in: header
          required: true
          schema:
            type: integer
            format: int64
          description: ID of the user making the request
      responses:
        '200':
          description: Cell retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CellResponse'
        '403':
          description: Forbidden - User does not have access
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Sheet or cell not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    
    delete:
      summary: Delete a cell
      description: Deletes a specific cell from a sheet
      operationId: deleteCell
      tags:
        - Cell
      parameters:
        - name: sheetId
          in: path
          required: true
          schema:
            type: integer
            format: int64
          description: ID of the sheet
        - name: row
          in: path
          required: true
          schema:
            type: integer
          description: Row index of the cell
        - name: column
          in: path
          required: true
          schema:
            type: integer
          description: Column index of the cell
        - name: X-User-ID
          in: header
          required: true
          schema:
            type: integer
            format: int64
          description: ID of the user making the request
      responses:
        '204':
          description: Cell deleted successfully
        '403':
          description: Forbidden - User does not have write access
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Sheet or cell not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '409':
          description: Conflict - Cell is locked by another user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /sheet/{sheetId}/cell/{cellId}:
    post:
      summary: Update a cell by its ID
      description: Updates an existing cell in a sheet using its direct cell ID.
      operationId: updateCellById
      tags:
        - Cell
      parameters:
        - name: sheetId
          in: path
          required: true
          schema:
            type: integer
            format: int64
          description: ID of the sheet
        - name: cellId
          in: path
          required: true
          schema:
            type: string
          description: ID of the cell to update (format sheetId:row:column)
        - name: X-User-ID
          in: header
          required: true
          schema:
            type: integer
            format: int64
          description: ID of the user making the request
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CellDataRequest'
      responses:
        '200':
          description: Cell updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CellResponse'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CellErrorResponse'
        '403':
          description: Forbidden - User does not have write access
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Sheet or cell not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '409':
          description: Conflict - Cell is locked by another user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

components:
  schemas:
    HealthResponse:
      type: object
      properties:
        status:
          type: string
          example: "UP"
          description: Current health status of the service
        timestamp:
          type: string
          format: date-time
          example: "2025-05-24T12:00:00Z"
          description: Current server time

    CreateSheetRequest:
      type: object
      required:
        - name
        - maxRows
        - maxColumns
      properties:
        name:
          type: string
          description: Name of the sheet
          example: "My Spreadsheet"
        description:
          type: string
          description: Description of the sheet
          example: "A spreadsheet for tracking expenses"
        maxRows:
          type: integer
          description: Maximum number of rows in the sheet
          minimum: 1
          maximum: 1000
          default: 100
          example: 100
        maxColumns:
          type: integer
          description: Maximum number of columns in the sheet
          minimum: 1
          maximum: 100
          default: 26
          example: 26

    SheetResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: Unique identifier for the sheet
          example: 1
        name:
          type: string
          description: Name of the sheet
          example: "Budget 2025"
        description:
          type: string
          description: Description of the sheet
          example: "Annual budget planning for 2025"
        maxLength:
          type: integer
          description: Maximum number of rows
          example: 100
        maxBreadth:
          type: integer
          description: Maximum number of columns
          example: 100
        userId:
          type: integer
          format: int64
          description: ID of the user who owns the sheet
          example: 1001
        createdAt:
          type: string
          format: date-time
          description: Time when the sheet was created
          example: "2025-05-24T12:00:00Z"
        updatedAt:
          type: string
          format: date-time
          description: Time when the sheet was last updated
          example: "2025-05-24T12:00:00Z"

    SheetSummaryResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: Unique identifier for the sheet
          example: 1
        name:
          type: string
          description: Name of the sheet
          example: "Budget 2025"
        description:
          type: string
          description: Description of the sheet
          example: "Annual budget planning for 2025"
        accessType:
          type: string
          enum: [READ, WRITE, ADMIN, OWNER]
          description: Type of access the user has to the sheet
          example: "OWNER"
        createdAt:
          type: string
          format: date-time
          description: Time when the sheet was created
          example: "2025-05-24T12:00:00Z"
        updatedAt:
          type: string
          format: date-time
          description: Time when the sheet was last updated
          example: "2025-05-24T12:00:00Z"

    SheetDetailsResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: Unique identifier for the sheet
          example: 1
        name:
          type: string
          description: Name of the sheet
          example: "Budget 2025"
        description:
          type: string
          description: Description of the sheet
          example: "Annual budget planning for 2025"
        maxLength:
          type: integer
          description: Maximum number of rows
          example: 100
        maxBreadth:
          type: integer
          description: Maximum number of columns
          example: 100
        userId:
          type: integer
          format: int64
          description: ID of the user who owns the sheet
          example: 1001
        accessType:
          type: string
          enum: [READ, WRITE, ADMIN, OWNER]
          description: Type of access the user has to the sheet
          example: "OWNER"
        createdAt:
          type: string
          format: date-time
          description: Time when the sheet was created
          example: "2025-05-24T12:00:00Z"
        updatedAt:
          type: string
          format: date-time
          description: Time when the sheet was last updated
          example: "2025-05-24T12:00:00Z"

    ShareSheetRequest:
      type: object
      required:
        - userIds
        - accessType
      properties:
        userIds:
          type: array
          items:
            type: integer
            format: int64
          description: IDs of users to share with
          example: [1002, 1003]
        accessType:
          type: string
          enum: [READ, WRITE, ADMIN]
          description: Type of access to grant
          example: "READ"

    ShareSheetResponse:
      type: object
      properties:
        message:
          type: string
          description: Success message
          example: "Sheet shared successfully with 2 users"

    ErrorResponse:
      type: object
      properties:
        status:
          type: integer
          description: HTTP status code
          example: 400
        error:
          type: string
          description: Error type
          example: "Bad Request"
        message:
          type: string
          description: Error message
          example: "Invalid request parameters"
        path:
          type: string
          description: Request path
          example: "/v1/sheet"
        timestamp:
          type: string
          format: date-time
          description: Time when the error occurred
          example: "2025-05-24T12:00:00Z"

    CellRequest:
      $ref: 'schemas/cell.yaml#/components/schemas/CellRequest'
    
    CellResponse:
      $ref: 'schemas/cell.yaml#/components/schemas/CellResponse'
    
    CellBatchRequest:
      $ref: 'schemas/cell.yaml#/components/schemas/CellBatchRequest'
    
    CellBatchResponse:
      $ref: 'schemas/cell.yaml#/components/schemas/CellBatchResponse'
    
    CellErrorResponse:
      $ref: 'schemas/cell.yaml#/components/schemas/CellErrorResponse'
    
    CellDataRequest:
      type: object
      properties:
        value:
          type: string
          description: New value of the cell
          example: "Hello, World!"
