/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (7.5.0).
 * https://openapi-generator.tech
 * Do not edit the class manually.
*/
package com.sheets.generated.api

import com.sheets.generated.model.CreateSheetRequest
import com.sheets.generated.model.ErrorResponse
import com.sheets.generated.model.ShareSheetRequest
import com.sheets.generated.model.ShareSheetResponse
import com.sheets.generated.model.SheetDetailsResponse
import com.sheets.generated.model.SheetResponse
import com.sheets.generated.model.SheetSummaryResponse
import org.springframework.http.HttpStatus
import org.springframework.http.MediaType
import org.springframework.http.ResponseEntity

import org.springframework.web.bind.annotation.*
import org.springframework.validation.annotation.Validated
import org.springframework.web.context.request.NativeWebRequest
import org.springframework.beans.factory.annotation.Autowired

import jakarta.validation.constraints.DecimalMax
import jakarta.validation.constraints.DecimalMin
import jakarta.validation.constraints.Email
import jakarta.validation.constraints.Max
import jakarta.validation.constraints.Min
import jakarta.validation.constraints.NotNull
import jakarta.validation.constraints.Pattern
import jakarta.validation.constraints.Size
import jakarta.validation.Valid

import kotlin.collections.List
import kotlin.collections.Map

@Validated
@RequestMapping("\${api.base-path:/v1}")
interface SheetApi {


    @RequestMapping(
            method = [RequestMethod.POST],
            value = ["/sheet"],
            produces = ["application/json"],
            consumes = ["application/json"]
    )
    fun createSheet( @RequestHeader(value = "X-User-ID", required = true) xUserID: kotlin.Long, @Valid @RequestBody createSheetRequest: CreateSheetRequest): ResponseEntity<SheetResponse> {
        return ResponseEntity(HttpStatus.NOT_IMPLEMENTED)
    }


    @RequestMapping(
            method = [RequestMethod.GET],
            value = ["/sheet/{sheetId}"],
            produces = ["application/json"]
    )
    fun getSheetDetails( @RequestHeader(value = "X-User-ID", required = true) xUserID: kotlin.Long, @PathVariable("sheetId") sheetId: kotlin.Long): ResponseEntity<SheetDetailsResponse> {
        return ResponseEntity(HttpStatus.NOT_IMPLEMENTED)
    }


    @RequestMapping(
            method = [RequestMethod.GET],
            value = ["/sheet"],
            produces = ["application/json"]
    )
    fun getSheets( @RequestHeader(value = "X-User-ID", required = true) xUserID: kotlin.Long): ResponseEntity<List<SheetSummaryResponse>> {
        return ResponseEntity(HttpStatus.NOT_IMPLEMENTED)
    }


    @RequestMapping(
            method = [RequestMethod.POST],
            value = ["/sheet/{sheetId}/share"],
            produces = ["application/json"],
            consumes = ["application/json"]
    )
    fun shareSheet( @RequestHeader(value = "X-User-ID", required = true) xUserID: kotlin.Long, @PathVariable("sheetId") sheetId: kotlin.Long, @Valid @RequestBody shareSheetRequest: ShareSheetRequest): ResponseEntity<ShareSheetResponse> {
        return ResponseEntity(HttpStatus.NOT_IMPLEMENTED)
    }
}
