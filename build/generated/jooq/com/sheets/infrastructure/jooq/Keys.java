/*
 * This file is generated by jOOQ.
 */
package com.sheets.infrastructure.jooq;


import com.sheets.infrastructure.jooq.tables.AccessMappings;
import com.sheets.infrastructure.jooq.tables.Sheets;
import com.sheets.infrastructure.jooq.tables.Users;
import com.sheets.infrastructure.jooq.tables.records.AccessMappingsRecord;
import com.sheets.infrastructure.jooq.tables.records.SheetsRecord;
import com.sheets.infrastructure.jooq.tables.records.UsersRecord;

import org.jooq.ForeignKey;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables in
 * public.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class Keys {

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<AccessMappingsRecord> ACCESS_MAPPINGS_PKEY = Internal.createUniqueKey(AccessMappings.ACCESS_MAPPINGS, DSL.name("access_mappings_pkey"), new TableField[] { AccessMappings.ACCESS_MAPPINGS.ID }, true);
    public static final UniqueKey<AccessMappingsRecord> ACCESS_MAPPINGS_SHEET_ID_USER_ID_KEY = Internal.createUniqueKey(AccessMappings.ACCESS_MAPPINGS, DSL.name("access_mappings_sheet_id_user_id_key"), new TableField[] { AccessMappings.ACCESS_MAPPINGS.SHEET_ID, AccessMappings.ACCESS_MAPPINGS.USER_ID }, true);
    public static final UniqueKey<SheetsRecord> SHEETS_PKEY = Internal.createUniqueKey(Sheets.SHEETS, DSL.name("sheets_pkey"), new TableField[] { Sheets.SHEETS.ID }, true);
    public static final UniqueKey<UsersRecord> USERS_EMAIL_KEY = Internal.createUniqueKey(Users.USERS, DSL.name("users_email_key"), new TableField[] { Users.USERS.EMAIL }, true);
    public static final UniqueKey<UsersRecord> USERS_PKEY = Internal.createUniqueKey(Users.USERS, DSL.name("users_pkey"), new TableField[] { Users.USERS.ID }, true);
    public static final UniqueKey<UsersRecord> USERS_USERNAME_KEY = Internal.createUniqueKey(Users.USERS, DSL.name("users_username_key"), new TableField[] { Users.USERS.USERNAME }, true);

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<AccessMappingsRecord, SheetsRecord> ACCESS_MAPPINGS__ACCESS_MAPPINGS_SHEET_ID_FKEY = Internal.createForeignKey(AccessMappings.ACCESS_MAPPINGS, DSL.name("access_mappings_sheet_id_fkey"), new TableField[] { AccessMappings.ACCESS_MAPPINGS.SHEET_ID }, Keys.SHEETS_PKEY, new TableField[] { Sheets.SHEETS.ID }, true);
}
