/*
 * This file is generated by jOOQ.
 */
package com.sheets.infrastructure.jooq.tables.records;


import com.sheets.infrastructure.jooq.enums.AccessType;
import com.sheets.infrastructure.jooq.tables.AccessMappings;

import java.time.OffsetDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class AccessMappingsRecord extends UpdatableRecordImpl<AccessMappingsRecord> implements Record6<Long, Long, Long, AccessType, OffsetDateTime, OffsetDateTime> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.access_mappings.id</code>.
     */
    public AccessMappingsRecord setId(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.access_mappings.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.access_mappings.sheet_id</code>.
     */
    public AccessMappingsRecord setSheetId(Long value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.access_mappings.sheet_id</code>.
     */
    public Long getSheetId() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>public.access_mappings.user_id</code>.
     */
    public AccessMappingsRecord setUserId(Long value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.access_mappings.user_id</code>.
     */
    public Long getUserId() {
        return (Long) get(2);
    }

    /**
     * Setter for <code>public.access_mappings.access_type</code>.
     */
    public AccessMappingsRecord setAccessType(AccessType value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>public.access_mappings.access_type</code>.
     */
    public AccessType getAccessType() {
        return (AccessType) get(3);
    }

    /**
     * Setter for <code>public.access_mappings.created_at</code>.
     */
    public AccessMappingsRecord setCreatedAt(OffsetDateTime value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>public.access_mappings.created_at</code>.
     */
    public OffsetDateTime getCreatedAt() {
        return (OffsetDateTime) get(4);
    }

    /**
     * Setter for <code>public.access_mappings.updated_at</code>.
     */
    public AccessMappingsRecord setUpdatedAt(OffsetDateTime value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>public.access_mappings.updated_at</code>.
     */
    public OffsetDateTime getUpdatedAt() {
        return (OffsetDateTime) get(5);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row6<Long, Long, Long, AccessType, OffsetDateTime, OffsetDateTime> fieldsRow() {
        return (Row6) super.fieldsRow();
    }

    @Override
    public Row6<Long, Long, Long, AccessType, OffsetDateTime, OffsetDateTime> valuesRow() {
        return (Row6) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return AccessMappings.ACCESS_MAPPINGS.ID;
    }

    @Override
    public Field<Long> field2() {
        return AccessMappings.ACCESS_MAPPINGS.SHEET_ID;
    }

    @Override
    public Field<Long> field3() {
        return AccessMappings.ACCESS_MAPPINGS.USER_ID;
    }

    @Override
    public Field<AccessType> field4() {
        return AccessMappings.ACCESS_MAPPINGS.ACCESS_TYPE;
    }

    @Override
    public Field<OffsetDateTime> field5() {
        return AccessMappings.ACCESS_MAPPINGS.CREATED_AT;
    }

    @Override
    public Field<OffsetDateTime> field6() {
        return AccessMappings.ACCESS_MAPPINGS.UPDATED_AT;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public Long component2() {
        return getSheetId();
    }

    @Override
    public Long component3() {
        return getUserId();
    }

    @Override
    public AccessType component4() {
        return getAccessType();
    }

    @Override
    public OffsetDateTime component5() {
        return getCreatedAt();
    }

    @Override
    public OffsetDateTime component6() {
        return getUpdatedAt();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public Long value2() {
        return getSheetId();
    }

    @Override
    public Long value3() {
        return getUserId();
    }

    @Override
    public AccessType value4() {
        return getAccessType();
    }

    @Override
    public OffsetDateTime value5() {
        return getCreatedAt();
    }

    @Override
    public OffsetDateTime value6() {
        return getUpdatedAt();
    }

    @Override
    public AccessMappingsRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public AccessMappingsRecord value2(Long value) {
        setSheetId(value);
        return this;
    }

    @Override
    public AccessMappingsRecord value3(Long value) {
        setUserId(value);
        return this;
    }

    @Override
    public AccessMappingsRecord value4(AccessType value) {
        setAccessType(value);
        return this;
    }

    @Override
    public AccessMappingsRecord value5(OffsetDateTime value) {
        setCreatedAt(value);
        return this;
    }

    @Override
    public AccessMappingsRecord value6(OffsetDateTime value) {
        setUpdatedAt(value);
        return this;
    }

    @Override
    public AccessMappingsRecord values(Long value1, Long value2, Long value3, AccessType value4, OffsetDateTime value5, OffsetDateTime value6) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached AccessMappingsRecord
     */
    public AccessMappingsRecord() {
        super(AccessMappings.ACCESS_MAPPINGS);
    }

    /**
     * Create a detached, initialised AccessMappingsRecord
     */
    public AccessMappingsRecord(Long id, Long sheetId, Long userId, AccessType accessType, OffsetDateTime createdAt, OffsetDateTime updatedAt) {
        super(AccessMappings.ACCESS_MAPPINGS);

        setId(id);
        setSheetId(sheetId);
        setUserId(userId);
        setAccessType(accessType);
        setCreatedAt(createdAt);
        setUpdatedAt(updatedAt);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised AccessMappingsRecord
     */
    public AccessMappingsRecord(com.sheets.infrastructure.jooq.tables.pojos.AccessMappings value) {
        super(AccessMappings.ACCESS_MAPPINGS);

        if (value != null) {
            setId(value.getId());
            setSheetId(value.getSheetId());
            setUserId(value.getUserId());
            setAccessType(value.getAccessType());
            setCreatedAt(value.getCreatedAt());
            setUpdatedAt(value.getUpdatedAt());
            resetChangedOnNotNull();
        }
    }
}
