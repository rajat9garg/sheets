/*
 * This file is generated by jOOQ.
 */
package com.sheets.infrastructure.jooq.tables.records;


import com.sheets.infrastructure.jooq.tables.Users;

import java.time.OffsetDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record9;
import org.jooq.Row9;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class UsersRecord extends UpdatableRecordImpl<UsersRecord> implements Record9<Long, String, String, String, String, String, Boolean, OffsetDateTime, OffsetDateTime> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.users.id</code>.
     */
    public UsersRecord setId(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.users.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.users.username</code>.
     */
    public UsersRecord setUsername(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.users.username</code>.
     */
    public String getUsername() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.users.email</code>.
     */
    public UsersRecord setEmail(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.users.email</code>.
     */
    public String getEmail() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.users.first_name</code>.
     */
    public UsersRecord setFirstName(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>public.users.first_name</code>.
     */
    public String getFirstName() {
        return (String) get(3);
    }

    /**
     * Setter for <code>public.users.last_name</code>.
     */
    public UsersRecord setLastName(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>public.users.last_name</code>.
     */
    public String getLastName() {
        return (String) get(4);
    }

    /**
     * Setter for <code>public.users.password_hash</code>.
     */
    public UsersRecord setPasswordHash(String value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>public.users.password_hash</code>.
     */
    public String getPasswordHash() {
        return (String) get(5);
    }

    /**
     * Setter for <code>public.users.is_active</code>.
     */
    public UsersRecord setIsActive(Boolean value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>public.users.is_active</code>.
     */
    public Boolean getIsActive() {
        return (Boolean) get(6);
    }

    /**
     * Setter for <code>public.users.created_at</code>.
     */
    public UsersRecord setCreatedAt(OffsetDateTime value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>public.users.created_at</code>.
     */
    public OffsetDateTime getCreatedAt() {
        return (OffsetDateTime) get(7);
    }

    /**
     * Setter for <code>public.users.updated_at</code>.
     */
    public UsersRecord setUpdatedAt(OffsetDateTime value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>public.users.updated_at</code>.
     */
    public OffsetDateTime getUpdatedAt() {
        return (OffsetDateTime) get(8);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record9 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row9<Long, String, String, String, String, String, Boolean, OffsetDateTime, OffsetDateTime> fieldsRow() {
        return (Row9) super.fieldsRow();
    }

    @Override
    public Row9<Long, String, String, String, String, String, Boolean, OffsetDateTime, OffsetDateTime> valuesRow() {
        return (Row9) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return Users.USERS.ID;
    }

    @Override
    public Field<String> field2() {
        return Users.USERS.USERNAME;
    }

    @Override
    public Field<String> field3() {
        return Users.USERS.EMAIL;
    }

    @Override
    public Field<String> field4() {
        return Users.USERS.FIRST_NAME;
    }

    @Override
    public Field<String> field5() {
        return Users.USERS.LAST_NAME;
    }

    @Override
    public Field<String> field6() {
        return Users.USERS.PASSWORD_HASH;
    }

    @Override
    public Field<Boolean> field7() {
        return Users.USERS.IS_ACTIVE;
    }

    @Override
    public Field<OffsetDateTime> field8() {
        return Users.USERS.CREATED_AT;
    }

    @Override
    public Field<OffsetDateTime> field9() {
        return Users.USERS.UPDATED_AT;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getUsername();
    }

    @Override
    public String component3() {
        return getEmail();
    }

    @Override
    public String component4() {
        return getFirstName();
    }

    @Override
    public String component5() {
        return getLastName();
    }

    @Override
    public String component6() {
        return getPasswordHash();
    }

    @Override
    public Boolean component7() {
        return getIsActive();
    }

    @Override
    public OffsetDateTime component8() {
        return getCreatedAt();
    }

    @Override
    public OffsetDateTime component9() {
        return getUpdatedAt();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getUsername();
    }

    @Override
    public String value3() {
        return getEmail();
    }

    @Override
    public String value4() {
        return getFirstName();
    }

    @Override
    public String value5() {
        return getLastName();
    }

    @Override
    public String value6() {
        return getPasswordHash();
    }

    @Override
    public Boolean value7() {
        return getIsActive();
    }

    @Override
    public OffsetDateTime value8() {
        return getCreatedAt();
    }

    @Override
    public OffsetDateTime value9() {
        return getUpdatedAt();
    }

    @Override
    public UsersRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public UsersRecord value2(String value) {
        setUsername(value);
        return this;
    }

    @Override
    public UsersRecord value3(String value) {
        setEmail(value);
        return this;
    }

    @Override
    public UsersRecord value4(String value) {
        setFirstName(value);
        return this;
    }

    @Override
    public UsersRecord value5(String value) {
        setLastName(value);
        return this;
    }

    @Override
    public UsersRecord value6(String value) {
        setPasswordHash(value);
        return this;
    }

    @Override
    public UsersRecord value7(Boolean value) {
        setIsActive(value);
        return this;
    }

    @Override
    public UsersRecord value8(OffsetDateTime value) {
        setCreatedAt(value);
        return this;
    }

    @Override
    public UsersRecord value9(OffsetDateTime value) {
        setUpdatedAt(value);
        return this;
    }

    @Override
    public UsersRecord values(Long value1, String value2, String value3, String value4, String value5, String value6, Boolean value7, OffsetDateTime value8, OffsetDateTime value9) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached UsersRecord
     */
    public UsersRecord() {
        super(Users.USERS);
    }

    /**
     * Create a detached, initialised UsersRecord
     */
    public UsersRecord(Long id, String username, String email, String firstName, String lastName, String passwordHash, Boolean isActive, OffsetDateTime createdAt, OffsetDateTime updatedAt) {
        super(Users.USERS);

        setId(id);
        setUsername(username);
        setEmail(email);
        setFirstName(firstName);
        setLastName(lastName);
        setPasswordHash(passwordHash);
        setIsActive(isActive);
        setCreatedAt(createdAt);
        setUpdatedAt(updatedAt);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised UsersRecord
     */
    public UsersRecord(com.sheets.infrastructure.jooq.tables.pojos.Users value) {
        super(Users.USERS);

        if (value != null) {
            setId(value.getId());
            setUsername(value.getUsername());
            setEmail(value.getEmail());
            setFirstName(value.getFirstName());
            setLastName(value.getLastName());
            setPasswordHash(value.getPasswordHash());
            setIsActive(value.getIsActive());
            setCreatedAt(value.getCreatedAt());
            setUpdatedAt(value.getUpdatedAt());
            resetChangedOnNotNull();
        }
    }
}
